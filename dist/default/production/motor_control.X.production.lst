

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Jul 17 18:47:51 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.05
    16                           ; Generated 20/12/2018 GMT
    17                           ; 
    18                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F877A Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0094                     	;# 
    97  0098                     	;# 
    98  0099                     	;# 
    99  009C                     	;# 
   100  009D                     	;# 
   101  009E                     	;# 
   102  009F                     	;# 
   103  010C                     	;# 
   104  010D                     	;# 
   105  010E                     	;# 
   106  010F                     	;# 
   107  018C                     	;# 
   108  018D                     	;# 
   109  0000                     	;# 
   110  0001                     	;# 
   111  0002                     	;# 
   112  0003                     	;# 
   113  0004                     	;# 
   114  0005                     	;# 
   115  0006                     	;# 
   116  0007                     	;# 
   117  0008                     	;# 
   118  0009                     	;# 
   119  000A                     	;# 
   120  000B                     	;# 
   121  000C                     	;# 
   122  000D                     	;# 
   123  000E                     	;# 
   124  000E                     	;# 
   125  000F                     	;# 
   126  0010                     	;# 
   127  0011                     	;# 
   128  0012                     	;# 
   129  0013                     	;# 
   130  0014                     	;# 
   131  0015                     	;# 
   132  0015                     	;# 
   133  0016                     	;# 
   134  0017                     	;# 
   135  0018                     	;# 
   136  0019                     	;# 
   137  001A                     	;# 
   138  001B                     	;# 
   139  001B                     	;# 
   140  001C                     	;# 
   141  001D                     	;# 
   142  001E                     	;# 
   143  001F                     	;# 
   144  0081                     	;# 
   145  0085                     	;# 
   146  0086                     	;# 
   147  0087                     	;# 
   148  0088                     	;# 
   149  0089                     	;# 
   150  008C                     	;# 
   151  008D                     	;# 
   152  008E                     	;# 
   153  0091                     	;# 
   154  0092                     	;# 
   155  0093                     	;# 
   156  0094                     	;# 
   157  0098                     	;# 
   158  0099                     	;# 
   159  009C                     	;# 
   160  009D                     	;# 
   161  009E                     	;# 
   162  009F                     	;# 
   163  010C                     	;# 
   164  010D                     	;# 
   165  010E                     	;# 
   166  010F                     	;# 
   167  018C                     	;# 
   168  018D                     	;# 
   169                           
   170                           	psect	nvBANK0
   171  0026                     __pnvBANK0:	
   172  0026                     _min_period:	
   173  0026                     	ds	2
   174  0028                     _current_period:	
   175  0028                     	ds	2
   176  0015                     _CCPR1	set	21
   177  0001                     _TMR0	set	1
   178  001D                     _CCP2CON	set	29
   179  0017                     _CCP1CON	set	23
   180  0010                     _T1CON	set	16
   181  000B                     _INTCON	set	11
   182  0032                     _RB2	set	50
   183  0031                     _RB1	set	49
   184  0030                     _RB0	set	48
   185  005D                     _TMR0IE	set	93
   186  005A                     _TMR0IF	set	90
   187  00E8                     _CCP2M0	set	232
   188  0068                     _CCP2IF	set	104
   189  0062                     _CCP1IF	set	98
   190  0081                     _OPTION_REG	set	129
   191  0087                     _TRISC	set	135
   192  0086                     _TRISB	set	134
   193  0468                     _CCP2IE	set	1128
   194  0462                     _CCP1IE	set	1122
   195                           
   196                           ; #config settings
   197  0000                     
   198                           	psect	cinit
   199  000F                     start_initialization:	
   200  000F                     __initialization:	
   201                           
   202                           ; Clear objects allocated to COMMON
   203  000F  01F0               	clrf	__pbssCOMMON& (0+127)
   204  0010  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   205  0011  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   206  0012  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   207  0013  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   208  0014  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   209  0015  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
   210  0016  01F7               	clrf	(__pbssCOMMON+7)& (0+127)
   211                           
   212                           ; Clear objects allocated to BANK0
   213  0017  1283               	bcf	3,5	;RP0=0, select bank0
   214  0018  1303               	bcf	3,6	;RP1=0, select bank0
   215  0019  01A0               	clrf	__pbssBANK0& (0+127)
   216  001A  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   217  001B  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   218  001C  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   219  001D  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   220  001E  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   221  001F                     end_of_initialization:	
   222                           ;End of C runtime variable initialization code
   223                           
   224  001F                     __end_of__initialization:	
   225  001F  0183               	clrf	3
   226  0020  120A  118A  2823   	ljmp	_main	;jump to C main() function
   227                           
   228                           	psect	bssCOMMON
   229  0070                     __pbssCOMMON:	
   230  0070                     _target_direction:	
   231  0070                     	ds	2
   232  0072                     _target_period:	
   233  0072                     	ds	2
   234  0074                     _timer_count:	
   235  0074                     	ds	2
   236  0076                     _rise_time:	
   237  0076                     	ds	2
   238                           
   239                           	psect	bssBANK0
   240  0020                     __pbssBANK0:	
   241  0020                     _b_on:	
   242  0020                     	ds	2
   243  0022                     _current_direction:	
   244  0022                     	ds	2
   245  0024                     _pot_output:	
   246  0024                     	ds	2
   247                           
   248                           	psect	cstackCOMMON
   249  0078                     __pcstackCOMMON:	
   250  0078                     ?_isr:	
   251  0078                     ??_isr:	
   252                           ; 1 bytes @ 0x0
   253                           
   254  0078                     ?_main:	
   255                           ; 1 bytes @ 0x0
   256                           
   257                           
   258                           ; 1 bytes @ 0x0
   259  0078                     	ds	4
   260                           
   261                           	psect	cstackBANK0
   262  002A                     __pcstackBANK0:	
   263  002A                     ??_main:	
   264                           
   265                           ; 1 bytes @ 0x0
   266  002A                     	ds	2
   267                           
   268                           	psect	maintext
   269  0023                     __pmaintext:	
   270 ;;
   271 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   272 ;;
   273 ;; *************** function _main *****************
   274 ;; Defined at:
   275 ;;		line 53 in file "main.c"
   276 ;; Parameters:    Size  Location     Type
   277 ;;		None
   278 ;; Auto vars:     Size  Location     Type
   279 ;;		None
   280 ;; Return value:  Size  Location     Type
   281 ;;                  1    wreg      void 
   282 ;; Registers used:
   283 ;;		wreg, status,2, status,0
   284 ;; Tracked objects:
   285 ;;		On entry : B00/0
   286 ;;		On exit  : 0/0
   287 ;;		Unchanged: 0/0
   288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   289 ;;      Params:         0       0       0       0       0
   290 ;;      Locals:         0       0       0       0       0
   291 ;;      Temps:          0       2       0       0       0
   292 ;;      Totals:         0       2       0       0       0
   293 ;;Total ram usage:        2 bytes
   294 ;; Hardware stack levels required when called:    1
   295 ;; This function calls:
   296 ;;		Nothing
   297 ;; This function is called by:
   298 ;;		Startup code after reset
   299 ;; This function uses a non-reentrant model
   300 ;;
   301                           
   302                           
   303                           ;psect for function _main
   304  0023                     _main:	
   305                           
   306                           ;main.c: 55:     target_direction = 0;
   307                           
   308                           ;incstack = 0
   309                           ; Regs used in _main: [wreg+status,2+status,0]
   310  0023  1683               	bsf	3,5	;RP0=1, select bank1
   311  0024  1303               	bcf	3,6	;RP1=0, select bank1
   312  0025  0186               	clrf	6	;volatile
   313                           
   314                           ;main.c: 56:     while (1) {
   315  0026  3006               	movlw	6
   316  0027  0087               	movwf	7	;volatile
   317                           
   318                           ;main.c: 58:         if (target_direction){
   319  0028  30C0               	movlw	192
   320  0029  008B               	movwf	11	;volatile
   321                           
   322                           ;main.c: 59:             if(!(RB1 == 1 && RB2 == 0)) {
   323  002A  3007               	movlw	7
   324  002B  0081               	movwf	1	;volatile
   325                           
   326                           ;main.c: 60:                 RB0 = 0;
   327  002C  3031               	movlw	49
   328  002D  1283               	bcf	3,5	;RP0=0, select bank0
   329  002E  1303               	bcf	3,6	;RP1=0, select bank0
   330  002F  0090               	movwf	16	;volatile
   331                           
   332                           ;main.c: 61:                 _delay((unsigned long)((5)*(20000000/4000.0)));
   333  0030  3005               	movlw	5
   334  0031  0097               	movwf	23	;volatile
   335                           
   336                           ;main.c: 62:                 RB1 = 1;
   337  0032  3005               	movlw	5
   338  0033  009D               	movwf	29	;volatile
   339                           
   340                           ;main.c: 64:                 _delay((unsigned long)((5)*(20000000/4000.0)));
   341  0034  0181               	clrf	1	;volatile
   342                           
   343                           ;main.c: 65:             }
   344  0035  01F4               	clrf	_timer_count	;volatile
   345  0036  01F5               	clrf	_timer_count+1	;volatile
   346                           
   347                           ;main.c: 66:         } else {
   348  0037  168B               	bsf	11,5	;volatile
   349                           
   350                           ;main.c: 67:             if(!(RB1 == 0 && RB2 == 1)) {
   351  0038  1683               	bsf	3,5	;RP0=1, select bank1
   352  0039  1303               	bcf	3,6	;RP1=0, select bank1
   353  003A  150C               	bsf	12,2	;volatile
   354                           
   355                           ;main.c: 68:                 RB0 = 0;
   356  003B  140D               	bsf	13,0	;volatile
   357                           
   358                           ;main.c: 69:                 _delay((unsigned long)((5)*(20000000/4000.0)));
   359  003C  3008               	movlw	8
   360  003D  1283               	bcf	3,5	;RP0=0, select bank0
   361  003E  1303               	bcf	3,6	;RP1=0, select bank0
   362  003F  00A6               	movwf	_min_period	;volatile
   363  0040  3052               	movlw	82
   364  0041  00A7               	movwf	_min_period+1	;volatile
   365                           
   366                           ;main.c: 70:                 RB1 = 0;
   367  0042  30FF               	movlw	255
   368  0043  00A8               	movwf	_current_period	;volatile
   369  0044  30FF               	movlw	255
   370  0045  00A9               	movwf	_current_period+1	;volatile
   371                           
   372                           ;main.c: 71:                 RB2 = 1;
   373  0046  1006               	bcf	6,0	;volatile
   374                           
   375                           ;main.c: 72:                 _delay((unsigned long)((5)*(20000000/4000.0)));
   376  0047  01F0               	clrf	_target_direction	;volatile
   377  0048  01F1               	clrf	_target_direction+1	;volatile
   378  0049                     l878:	
   379                           
   380                           ;main.c: 75:         if(target_period < min_period) {
   381  0049  0870               	movf	_target_direction,w	;volatile
   382  004A  0471               	iorwf	_target_direction+1,w	;volatile
   383  004B  1903               	btfsc	3,2
   384  004C  286D               	goto	l75
   385                           
   386                           ;main.c: 76:             target_period = min_period;
   387  004D  1C86               	btfss	6,1	;volatile
   388  004E  2851               	goto	l78
   389  004F  1D06               	btfss	6,2	;volatile
   390  0050  288C               	goto	l79
   391  0051                     l78:	
   392                           
   393                           ;main.c: 77:         }
   394  0051  1006               	bcf	6,0	;volatile
   395                           
   396                           ;main.c: 78: 
   397  0052  3021               	movlw	33
   398  0053  1283               	bcf	3,5	;RP0=0, select bank0
   399  0054  1303               	bcf	3,6	;RP1=0, select bank0
   400  0055  00AB               	movwf	??_main+1
   401  0056  3075               	movlw	117
   402  0057  00AA               	movwf	??_main
   403  0058                     u327:	
   404  0058  0BAA               	decfsz	??_main,f
   405  0059  2858               	goto	u327
   406  005A  0BAB               	decfsz	??_main+1,f
   407  005B  2858               	goto	u327
   408  005C  285D               	nop2
   409                           
   410                           ;main.c: 79:         if (current_period < target_period) {
   411  005D  1283               	bcf	3,5	;RP0=0, select bank0
   412  005E  1303               	bcf	3,6	;RP1=0, select bank0
   413  005F  1486               	bsf	6,1	;volatile
   414                           
   415                           ;main.c: 80:             RB0 = 0;
   416  0060  1106               	bcf	6,2	;volatile
   417                           
   418                           ;main.c: 81:         }
   419  0061  3021               	movlw	33
   420  0062  1283               	bcf	3,5	;RP0=0, select bank0
   421  0063  1303               	bcf	3,6	;RP1=0, select bank0
   422  0064  00AB               	movwf	??_main+1
   423  0065  3075               	movlw	117
   424  0066  00AA               	movwf	??_main
   425  0067                     u337:	
   426  0067  0BAA               	decfsz	??_main,f
   427  0068  2867               	goto	u337
   428  0069  0BAB               	decfsz	??_main+1,f
   429  006A  2867               	goto	u337
   430  006B  286C               	nop2
   431  006C  288C               	goto	l79
   432  006D                     l75:	
   433                           
   434                           ;main.c: 84:         }
   435  006D  1886               	btfsc	6,1	;volatile
   436  006E  2871               	goto	l82
   437  006F  1906               	btfsc	6,2	;volatile
   438  0070  288C               	goto	l79
   439  0071                     l82:	
   440                           
   441                           ;main.c: 85:     }
   442  0071  1006               	bcf	6,0	;volatile
   443                           
   444                           ;main.c: 86: }
   445  0072  3021               	movlw	33
   446  0073  1283               	bcf	3,5	;RP0=0, select bank0
   447  0074  1303               	bcf	3,6	;RP1=0, select bank0
   448  0075  00AB               	movwf	??_main+1
   449  0076  3075               	movlw	117
   450  0077  00AA               	movwf	??_main
   451  0078                     u347:	
   452  0078  0BAA               	decfsz	??_main,f
   453  0079  2878               	goto	u347
   454  007A  0BAB               	decfsz	??_main+1,f
   455  007B  2878               	goto	u347
   456  007C  287D               	nop2
   457  007D  1283               	bcf	3,5	;RP0=0, select bank0
   458  007E  1303               	bcf	3,6	;RP1=0, select bank0
   459  007F  1086               	bcf	6,1	;volatile
   460  0080  1506               	bsf	6,2	;volatile
   461  0081  3021               	movlw	33
   462  0082  1283               	bcf	3,5	;RP0=0, select bank0
   463  0083  1303               	bcf	3,6	;RP1=0, select bank0
   464  0084  00AB               	movwf	??_main+1
   465  0085  3075               	movlw	117
   466  0086  00AA               	movwf	??_main
   467  0087                     u357:	
   468  0087  0BAA               	decfsz	??_main,f
   469  0088  2887               	goto	u357
   470  0089  0BAB               	decfsz	??_main+1,f
   471  008A  2887               	goto	u357
   472  008B  288C               	nop2
   473  008C                     l79:	
   474  008C  1283               	bcf	3,5	;RP0=0, select bank0
   475  008D  1303               	bcf	3,6	;RP1=0, select bank0
   476  008E  0827               	movf	_min_period+1,w	;volatile
   477  008F  0273               	subwf	_target_period+1,w	;volatile
   478  0090  1D03               	skipz
   479  0091  2894               	goto	u305
   480  0092  0826               	movf	_min_period,w	;volatile
   481  0093  0272               	subwf	_target_period,w	;volatile
   482  0094                     u305:	
   483  0094  1803               	skipnc
   484  0095  289A               	goto	l83
   485  0096  0827               	movf	_min_period+1,w	;volatile
   486  0097  00F3               	movwf	_target_period+1	;volatile
   487  0098  0826               	movf	_min_period,w	;volatile
   488  0099  00F2               	movwf	_target_period	;volatile
   489  009A                     l83:	
   490  009A  0873               	movf	_target_period+1,w	;volatile
   491  009B  0229               	subwf	_current_period+1,w	;volatile
   492  009C  1D03               	skipz
   493  009D  28A0               	goto	u315
   494  009E  0872               	movf	_target_period,w	;volatile
   495  009F  0228               	subwf	_current_period,w	;volatile
   496  00A0                     u315:	
   497  00A0  1803               	skipnc
   498  00A1  28A4               	goto	l84
   499  00A2  1006               	bcf	6,0	;volatile
   500  00A3  2849               	goto	l878
   501  00A4                     l84:	
   502  00A4  1406               	bsf	6,0	;volatile
   503  00A5  2849               	goto	l878
   504  00A6                     __end_of_main:	
   505                           
   506                           	psect	text1
   507  00A6                     __ptext1:	
   508 ;; *************** function _isr *****************
   509 ;; Defined at:
   510 ;;		line 21 in file "main.c"
   511 ;; Parameters:    Size  Location     Type
   512 ;;		None
   513 ;; Auto vars:     Size  Location     Type
   514 ;;		None
   515 ;; Return value:  Size  Location     Type
   516 ;;                  1    wreg      void 
   517 ;; Registers used:
   518 ;;		wreg, status,2, status,0
   519 ;; Tracked objects:
   520 ;;		On entry : 0/0
   521 ;;		On exit  : 0/0
   522 ;;		Unchanged: 0/0
   523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   524 ;;      Params:         0       0       0       0       0
   525 ;;      Locals:         0       0       0       0       0
   526 ;;      Temps:          4       0       0       0       0
   527 ;;      Totals:         4       0       0       0       0
   528 ;;Total ram usage:        4 bytes
   529 ;; Hardware stack levels used:    1
   530 ;; This function calls:
   531 ;;		Nothing
   532 ;; This function is called by:
   533 ;;		Interrupt level 1
   534 ;; This function uses a non-reentrant model
   535 ;;
   536                           
   537                           
   538                           ;psect for function _isr
   539  00A6                     _isr:	
   540                           
   541                           ;main.c: 23:         }
   542  00A6  1283               	bcf	3,5	;RP0=0, select bank0
   543  00A7  1303               	bcf	3,6	;RP1=0, select bank0
   544  00A8  1D0C               	btfss	12,2	;volatile
   545  00A9  28C1               	goto	i1l778
   546                           
   547                           ;main.c: 24:     }
   548  00AA  110C               	bcf	12,2	;volatile
   549                           
   550                           ;main.c: 25: 
   551  00AB  01F4               	clrf	_timer_count	;volatile
   552  00AC  01F5               	clrf	_timer_count+1	;volatile
   553                           
   554                           ;main.c: 26:     if (TMR0IF){
   555  00AD  0821               	movf	_b_on+1,w	;volatile
   556  00AE  00A3               	movwf	_current_direction+1	;volatile
   557  00AF  0820               	movf	_b_on,w	;volatile
   558  00B0  00A2               	movwf	_current_direction	;volatile
   559                           
   560                           ;main.c: 27:         TMR0IF = 0;
   561  00B1  0876               	movf	_rise_time,w	;volatile
   562  00B2  0215               	subwf	21,w	;volatile
   563  00B3  00F8               	movwf	??_isr
   564  00B4  0877               	movf	_rise_time+1,w	;volatile
   565  00B5  1C03               	skipc
   566  00B6  0A77               	incf	_rise_time+1,w	;volatile
   567  00B7  0216               	subwf	22,w	;volatile
   568  00B8  00F9               	movwf	??_isr+1
   569  00B9  0878               	movf	??_isr,w
   570  00BA  00A8               	movwf	_current_period	;volatile
   571  00BB  0879               	movf	??_isr+1,w
   572  00BC  00A9               	movwf	_current_period+1	;volatile
   573                           
   574                           ;main.c: 28:         timer_count++;
   575  00BD  0816               	movf	22,w	;volatile
   576  00BE  00F7               	movwf	_rise_time+1	;volatile
   577  00BF  0815               	movf	21,w	;volatile
   578  00C0  00F6               	movwf	_rise_time	;volatile
   579  00C1                     i1l778:	
   580                           
   581                           ;main.c: 31:             timer_count = 0;
   582  00C1  1C0D               	btfss	13,0	;volatile
   583  00C2  28CF               	goto	i1l790
   584                           
   585                           ;main.c: 32:         }
   586  00C3  100D               	bcf	13,0	;volatile
   587                           
   588                           ;main.c: 34: }
   589  00C4  1C1D               	btfss	29,0	;volatile
   590  00C5  28CC               	goto	i1l786
   591                           
   592                           ;main.c: 35: 
   593  00C6  3001               	movlw	1
   594  00C7  00A0               	movwf	_b_on	;volatile
   595  00C8  3000               	movlw	0
   596  00C9  00A1               	movwf	_b_on+1	;volatile
   597                           
   598                           ;main.c: 36: void main() {
   599  00CA  101D               	bcf	29,0	;volatile
   600                           
   601                           ;main.c: 37: 
   602  00CB  28CF               	goto	i1l790
   603  00CC                     i1l786:	
   604                           
   605                           ;main.c: 38:     TRISB = 0b00000000;
   606  00CC  01A0               	clrf	_b_on	;volatile
   607  00CD  01A1               	clrf	_b_on+1	;volatile
   608                           
   609                           ;main.c: 39:     TRISC = 0b00000110;
   610  00CE  141D               	bsf	29,0	;volatile
   611  00CF                     i1l790:	
   612                           
   613                           ;main.c: 43:     T1CON = 0b00110001;
   614  00CF  1D0B               	btfss	11,2	;volatile
   615  00D0  28E3               	goto	i1l69
   616                           
   617                           ;main.c: 44:     CCP1CON = 0b00000101;
   618  00D1  110B               	bcf	11,2	;volatile
   619                           
   620                           ;main.c: 45:     CCP2CON = 0b00000101;
   621  00D2  3001               	movlw	1
   622  00D3  07F4               	addwf	_timer_count,f	;volatile
   623  00D4  1803               	skipnc
   624  00D5  0AF5               	incf	_timer_count+1,f	;volatile
   625  00D6  3000               	movlw	0
   626  00D7  07F5               	addwf	_timer_count+1,f	;volatile
   627                           
   628                           ;main.c: 46: 
   629  00D8  3026               	movlw	38
   630  00D9  0674               	xorwf	_timer_count,w	;volatile
   631  00DA  0475               	iorwf	_timer_count+1,w	;volatile
   632  00DB  1D03               	btfss	3,2
   633  00DC  28E3               	goto	i1l69
   634                           
   635                           ;main.c: 47:     TMR0 = 0;
   636  00DD  30FF               	movlw	255
   637  00DE  00A8               	movwf	_current_period	;volatile
   638  00DF  30FF               	movlw	255
   639  00E0  00A9               	movwf	_current_period+1	;volatile
   640                           
   641                           ;main.c: 48:     timer_count = 0;
   642  00E1  01F4               	clrf	_timer_count	;volatile
   643  00E2  01F5               	clrf	_timer_count+1	;volatile
   644  00E3                     i1l69:	
   645  00E3  087B               	movf	??_isr+3,w
   646  00E4  008A               	movwf	10
   647  00E5  0E7A               	swapf	(??_isr+2)^(0+4294967168),w
   648  00E6  0083               	movwf	3
   649  00E7  0EFE               	swapf	126,f
   650  00E8  0E7E               	swapf	126,w
   651  00E9  0009               	retfie
   652  00EA                     __end_of_isr:	
   653  007E                     btemp	set	126	;btemp
   654  007E                     wtemp0	set	126
   655                           
   656                           	psect	intentry
   657  0004                     __pintentry:	
   658                           ;incstack = 0
   659                           ; Regs used in _isr: [wreg+status,2+status,0]
   660                           
   661  0004                     interrupt_function:	
   662  007E                     saved_w	set	btemp
   663  0004  00FE               	movwf	btemp
   664  0005  0E03               	swapf	3,w
   665  0006  00FA               	movwf	??_isr+2
   666  0007  080A               	movf	10,w
   667  0008  00FB               	movwf	??_isr+3
   668  0009  120A  118A  28A6   	ljmp	_isr


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         14
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4      12
    BANK0            80      2      12
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _isr                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      18       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      2       C       5       15.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      18      12        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Jul 17 18:47:51 2019

            __CFG_CP$OFF 0000                       l82 0071                       l83 009A  
                     l75 006D                       l84 00A4                       l78 0051  
                     l79 008C                      l878 0049                      _RB0 0030  
                    _RB1 0031                      _RB2 0032                      u305 0094  
                    u315 00A0                      u327 0058                      u337 0067  
           __CFG_CPD$OFF 0000                      u347 0078                      u357 0087  
                    _isr 00A6             __CFG_FOSC$HS 0000             __CFG_LVP$OFF 0000  
                   ?_isr 0078                     i1l69 00E3                     _TMR0 0001  
           __CFG_WRT$OFF 0000                     _b_on 0020                     _main 0023  
                   btemp 007E            __CFG_BOREN$ON 0000                     start 000C  
                  ??_isr 0078                    ?_main 0078                    _CCPR1 0015  
          __CFG_WDTE$OFF 0000                    _T1CON 0010                    i1l790 00CF  
                  i1l786 00CC                    i1l778 00C1                    _TRISB 0086  
                  _TRISC 0087                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 00A6  
                 ??_main 002A                   _CCP2M0 00E8                   _CCP1IE 0462  
                 _CCP1IF 0062                   _CCP2IE 0468                   _CCP2IF 0068  
                 _INTCON 000B                   _TMR0IE 005D                   _TMR0IF 005A  
         __CFG_PWRTE$OFF 0000                   saved_w 007E  __end_of__initialization 001F  
         __pcstackCOMMON 0078               __pbssBANK0 0020               __pmaintext 0023  
             __pintentry 0004                  _CCP1CON 0017                  _CCP2CON 001D  
                __ptext1 00A6               _min_period 0026             __size_of_isr 0044  
   end_of_initialization 001F               _pot_output 0024         _target_direction 0070  
    start_initialization 000F              __end_of_isr 00EA           _current_period 0028  
            __pbssCOMMON 0070                ___latbits 0002            __pcstackBANK0 002A  
              __pnvBANK0 0026            _target_period 0072        interrupt_function 0004  
              _rise_time 0076            __size_of_main 0083                 intlevel1 0000  
             _OPTION_REG 0081              _timer_count 0074        _current_direction 0022  
